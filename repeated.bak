#lang planet neil/sicp

(define (sum term a next b)
(if (> a b)
0
(+ (term a)
(sum term (next a) next b))))

(define (cube a)
  (* a a a))
(check-expect (cube 3) 27)

(check-expect (sum identity 1 inc 5) 15)
(check-expect (sum cube 2 inc 4) 99)

(define (product term a next b)
  (if (> a b)
      1
      (* (term a)
         (product term (next a) next b))))

(check-expect (product identity 1 inc 3) 6)

;; repeated function

(define (repeated func term a next b)
  (if (> a (dec b))
      b
      (func (term a)
            (repeated func term (next a) next b))))
(check-expect (repeated + identity 1 inc 5) (sum identity 1 inc 5))